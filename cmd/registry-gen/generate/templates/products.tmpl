{{ header -}}
package registry

// ProductsByPID maps LIFX Product IDs to products.
var ProductsByPID = map[int]Product{
{{- range . }}
	{{ .PID }}: {
		PID: {{ .PID }},
		Name: "{{ .Name }}",
		Features: FeatureSet{
			HEV: {{ .Features.HEV }},
			Color: {{ .Features.Color }},
			Chain: {{ .Features.Chain }},
			Matrix: {{ .Features.Matrix }},
			Relays: {{ .Features.Relays }},
			Buttons: {{ .Features.Buttons }},
			Infrared: {{ .Features.Infrared }},
			Multizone: {{ .Features.Multizone }},
			TemperatureRange: {{ printf "%#v" .Features.TemperatureRange}},
			ExtendedMultizone: {{ .Features.ExtendedMultizone }},
		},
		Upgrades: []Upgrade{
		{{- range .Upgrades }}
			{
				Major: {{ .Major }},
				Minor: {{ .Minor }},
				Features: FeatureSet{
					HEV: {{ .Features.HEV }},
					Color: {{ .Features.Color }},
					Chain: {{ .Features.Chain }},
					Matrix: {{ .Features.Matrix }},
					Relays: {{ .Features.Relays }},
					Buttons: {{ .Features.Buttons }},
					Infrared: {{ .Features.Infrared }},
					Multizone: {{ .Features.Multizone }},
					TemperatureRange: {{ printf "%#v" .Features.TemperatureRange }},
					ExtendedMultizone: {{ .Features.ExtendedMultizone }},
				},
			},
		{{- end }}
		},
	},
{{- end }}
}

// Product represents a LIFX Product and its capabilities.
type Product struct {
	PID      int        `json:"pid"`
	Name     string     `json:"name"`
	Features FeatureSet `json:"features"`
	Upgrades []Upgrade  `json:"upgrades"`
}

// FeatureSet describes the capabilities of a LIFX Product.
type FeatureSet struct {
	HEV               bool  `json:"hev"`
	Color             bool  `json:"color"`
	Chain             bool  `json:"chain"`
	Matrix            bool  `json:"matrix"`
	Relays            bool  `json:"relays"`
	Buttons           bool  `json:"buttons"`
	Infrared          bool  `json:"infrared"`
	Multizone         bool  `json:"multizone"`
	TemperatureRange  []int `json:"temperature_range"`
	ExtendedMultizone bool  `json:"extended_multizone"`
}

// Upgrade describes the features added to an existing LIFX Product
// and available from the given version.
type Upgrade struct {
	Major    int        `json:"major"`
	Minor    int        `json:"minor"`
	Features FeatureSet `json:"features"`
}
